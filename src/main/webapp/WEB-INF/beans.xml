<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
        			<!-- 	http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd"> -->
    
    <!-- 	xmlns:p="http://www.springframework.org/schema/p"
		xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"-->
    <!-- Tell spring to configure beans via annotations -->
    <context:annotation-config />
    
    <!--  tell spring where to look for annotations (which classes) -->
    <context:component-scan base-package="com.ex"></context:component-scan>
    
    <!-- same for spring modules -->
    <mvc:annotation-driven></mvc:annotation-driven>
   <!--  <tx:annotation-driven />-->
	<!-- <jpa:repositories base-package="com.ex.repository"></jpa:repositories> -->
    <!--<tx:annotation-driven/>-->
    
    <!-- CONFIGURE HIBERNATE WITH SPRING
    NO LONGER NEED hibernate.cfg.xml nor do we need some fancy
    connection factory class in a separate utilities package etc
    we use DEPENDENCY INJECTION to wire together beans in order to
    use sessions in our spring context
    
    Contextual sessions = DataSource -> SessionFactory -> TX manager & DAOs
     -->
    
    <bean name="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">
       <property name="driverClassName" value="com.mysql.jdbc.Driver" />
       <property name="url" value="jdbc:mysql://localhost:3306/mytesting_db" />
       <property name="username" value="root" />
       <property name="password" value="" />
       <!-- <property name="initialSize" value="2" />
       <property name="maxActive" value="5" /> -->
    </bean>
    
    <bean id="mySessionFactory" class=
        "org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="myDataSource" />
        <property name="packagesToScan" value="com.ex.UserRepository" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQL5InnoDBDialect
                </prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="mySessionFactory" />
    </bean>
    

</beans>


<!--  <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
		xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
				http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

<context:annotation-config />
	<context:component-scan base-package="com.ex"></context:component-scan>
	<mvc:annotation-driven></mvc:annotation-driven>
	<tx:annotation-driven /> -->
	<!-- same for spring modules -->
	

<!-- enable spring to search for @Transactional -->

	<!-- CONFIGURE HIBERNATE WITH SPRING 
	NO LONGER NEED hibernate.cfg.xml nor do we need some fancy 
	connection factory class in a separate utilities package etc
	we use DEPENDENCY INJECTION to wire together beans in order to 
	use sessions in our spring context
	
	Contextual sessions = DataSource -> SessionFactory -> TX manager & DAOs
	 -->
	
	<!-- 	<jpa:repositories base-package="com.ex.repository"></jpa:repositories>
		     <bean id = "UserRepository" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
 <property name = "driverClassName" value = "com.mysql.jdbc.Driver"/>
   <property name = "url" value = "jdbc:mysql://localhost:3306/mytesting_db"/>
   <property name = "username" value = "root"/>
   <property name = "password" value = ""/>
   </bean>
	
		 -->
	<!-- spring data is not natively compatible with hibernate
	it is compatible with JPA, and in turn any "vendor" of an ORM
	tool that is JPA compliant however we need to use a 
	vendor adapter  -->
	
	<!-- 
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
	</bean>
	
	<bean id="entityManagerFactory"
	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="UserRepository"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.ex" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>
	
	<bean id="transactionManager" 
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	 -->
	
	
	
	
	
<!--  	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@oct22-java-demo.cvwoqxsk8czc.us-east-1.rds.amazonaws.com:1521/ORCL" />
		<property name="username" value="oct22_java_demo" />
		<property name="password" value="p4ssw0rd" />
	</bean>-->
	
	
	<!--  
  <bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
		<property name="packagesToScan" value="com.ex" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>
 	<bean id="transactionManager" 
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>-->

<!-- 

</beans> -->
